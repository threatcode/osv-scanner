package osvscanner

import (
	"reflect"
	"testing"

	"github.com/threatcode/osv-scanner/internal/output"
	"github.com/threatcode/osv-scanner/pkg/models"
	"github.com/threatcode/osv-scanner/pkg/osv"
)

func Test_groupResponseBySource(t *testing.T) {
	t.Parallel()
	type args struct {
		r            *output.Reporter
		query        osv.BatchedQuery
		resp         *osv.HydratedBatchedResponse
		callAnalysis bool
	}
	tests := []struct {
		name string
		args args
		want models.VulnerabilityResults
	}{}
	for _, tt := range tests {
		tt := tt // Reinitialize for t.Parallel()
		t.Run(tt.name, func(t *testing.T) {
			t.Parallel()
			if got := groupResponseBySource(tt.args.r, tt.args.query, tt.args.resp, tt.args.callAnalysis); !reflect.DeepEqual(got, tt.want) {
				t.Errorf("groupResponse() = %v, want %v", got, tt.want)
			}
		})
	}
}
